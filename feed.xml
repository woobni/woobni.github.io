<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://woobni.github.io/</id><title>woobni's diary.</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2024-07-17T15:54:11+09:00</updated> <author> <name>woobni</name> <uri>https://woobni.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://woobni.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://woobni.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2024 woobni </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>(kube-prometheus-stack) Prometheus 기반 모니터링 스택 Thanos 연동</title><link href="https://woobni.github.io/posts/post240524/" rel="alternate" type="text/html" title="(kube-prometheus-stack) Prometheus 기반 모니터링 스택 Thanos 연동" /><published>2024-05-24T19:00:00+09:00</published> <updated>2024-07-17T09:59:59+09:00</updated> <id>https://woobni.github.io/posts/post240524/</id> <content src="https://woobni.github.io/posts/post240524/" /> <author> <name>woobni</name> </author> <category term="Kubernetes" /> <summary> 본 글은 ‘(kube-prometheus-stack) Prometheus 기반 모니터링 스택 구축’ 포스팅 이후 진행됨 Background K8S 클러스터에 구성된 Prometheus 기반 모니터링 스택의 Prometheus HA, 메트릭 장기 저장, global view를 구현하기 위해 Thanos 스택 연동 각 Thanos 컴포넌트에 ServiceMonitor를 생성하여 Thanos 컴포넌트 메트릭 추가 수집 Prerequisite Helm v3.14.4 kubectl v1.28.2 Monitoring Stack Setup kube-prometheus-stack helm chart v58.2.1 Object Storage ... </summary> </entry> <entry><title>(kube-prometheus-stack) Prometheus 기반 모니터링 스택 구축</title><link href="https://woobni.github.io/posts/post240516/" rel="alternate" type="text/html" title="(kube-prometheus-stack) Prometheus 기반 모니터링 스택 구축" /><published>2024-05-16T19:00:00+09:00</published> <updated>2024-07-17T15:53:39+09:00</updated> <id>https://woobni.github.io/posts/post240516/</id> <content src="https://woobni.github.io/posts/post240516/" /> <author> <name>woobni</name> </author> <category term="Kubernetes" /> <summary> 본 글은 ‘Hyper-v 환경에서 k8s 클러스터 구축’ 포스팅 이후 진행함 Background SaaS 제품을 사용하는 테넌트가 추가됨에 따른 환경 배포 및 관리가 불편해져 기존의 베어메탈 환경에서 쿠버네티스로 전환 기존 Bare-metal 환경에 직접 설치된 모니터링 스택들을 쿠버네티스 클러스터 위에 구축 K8S 클러스터의 테넌트별 시스템 리소스 및 애플리케이션 사용량 모니터링을 가능하게 함 → 플랫폼의 가용성과 신뢰성을 보장 Prerequisite Helm v3.14.4+ kubectl v1.28.2+ StorageClass에서 사용될 CSI 드라이버 Provisioner Helm Chart Chart Name: https:... </summary> </entry> <entry><title>PV, PVC의 동적 프로비저닝을 위한 NFS CSI 드라이버 구성</title><link href="https://woobni.github.io/posts/post240515/" rel="alternate" type="text/html" title="PV, PVC의 동적 프로비저닝을 위한 NFS CSI 드라이버 구성" /><published>2024-05-15T19:00:00+09:00</published> <updated>2024-07-08T08:35:00+09:00</updated> <id>https://woobni.github.io/posts/post240515/</id> <content src="https://woobni.github.io/posts/post240515/" /> <author> <name>woobni</name> </author> <category term="Kubernetes" /> <summary> Prerequisite NFS 서버/클라이언트 설정 nfs-provisioner 구성 helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/ helm repo update kubectl create ns nfs-provisioner helm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \ --namespace nfs-provisioner \ --set nfs.server=woobin-v... </summary> </entry> <entry><title>NFS 서버/클라이언트 설정</title><link href="https://woobni.github.io/posts/post240514/" rel="alternate" type="text/html" title="NFS 서버/클라이언트 설정" /><published>2024-05-14T19:00:00+09:00</published> <updated>2024-05-14T19:00:00+09:00</updated> <id>https://woobni.github.io/posts/post240514/</id> <content src="https://woobni.github.io/posts/post240514/" /> <author> <name>woobni</name> </author> <category term="Linux" /> <summary> NFS 서버에서는 ‘sync’ 옵션을 사용하여 데이터의 일관성을 보장하는 반면, NFS 클라이언트에서는 ‘async’ 옵션을 사용하여 성능을 향상 시키기 위해 입출력 작업을 비동기적으로 처리 NFS Server (DB Server) # 1. 디렉터리 생성 sudo mkdir -p /fsnfs/share /fsnfs/user ln -s /fsnfs /mnt/repo # 2. NFS 서버 서비스 기동 sudo dnf install -y nfs-utils sudo systemctl start nfs-server sudo systemctl enable nfs-server # 3. exports 파일 설정 sudo vi /etc/exports /mnt/repo/share [NFS 클라이언트 호... </summary> </entry> <entry><title>자바스크립트 런타임</title><link href="https://woobni.github.io/posts/post240402/" rel="alternate" type="text/html" title="자바스크립트 런타임" /><published>2024-04-02T19:00:00+09:00</published> <updated>2024-06-20T16:30:12+09:00</updated> <id>https://woobni.github.io/posts/post240402/</id> <content src="https://woobni.github.io/posts/post240402/" /> <author> <name>woobni</name> </author> <category term="Javascript" /> <summary> 1. 자바스크립트 엔진과 자바스크립트 런타임 1) 웹 브라우저 크롬 웹 브라우저는 V8 엔진이 탑재된 자바스크립트 런타임이다. 자바스크립트란? 자바스크립트는 프로그래밍 언어이다. 자바스크립트 런타임이란? 런타임이란 프로그래밍 언어가 구동되는 환경 자바스크립트 런타임이란 자바스크립트가 구동되는 환경을 말한다. 이러한 자바스크립트 런타임의 종류로는 웹 브라우저(크롬, 파이어폭스, 익스플로러 등)프로그램과 Node.js 라는 프로그램이 있다. 이러한 프로그램들에서 자바스크립트가 구동되기 때문에 자바스크립트 런타임이라고 한다. V8 엔진이란? V8은 오픈 소스 자바스크립트 엔진 중 하나이다. 자바스크립트 엔진은 자바스크립트 코드를 실행하는 소프트웨어이다. ... </summary> </entry> </feed>
